<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.demo.my.base.mybatis.mapper.ds1mapper.CommentMapper">

<resultMap type="com.demo.my.base.model.Comment" id="CommentBaseMapper">
	<id property="discoveryId" column="DISCOVERY_ID" />
	<id property="toId" column="TO_ID" />
	<id property="createTime" column="CREATE_TIME" />
	<id property="userIp" column="USER_IP" />
	<id property="id" column="ID" />
	<id property="blogId" column="BLOG_ID" />
	<id property="fromId" column="FROM_ID" />
	<id property="commentId" column="COMMENT_ID" />
	<id property="messageContent" column="MESSAGE_CONTENT" />
</resultMap>  

<insert id="insert">
	<selectKey resultType="long" keyProperty="id">  
   		select LAST_INSERT_ID()
   	</selectKey>
	insert into comment
	(DISCOVERY_ID,TO_ID,CREATE_TIME,USER_IP,BLOG_ID,FROM_ID,MESSAGE_CONTENT,COMMENT_ID)
	values
	(#{discoveryId},#{toId},#{createTime},#{userIp},#{blogId},#{fromId},#{messageContent},#{commentId})
</insert>

<update id="update">
	UPDATE comment 
	<set>
			<if test="discoveryId != null">  
	        	DISCOVERY_ID=#{discoveryId},
	    	</if>
			<if test="toId != null">  
	        	TO_ID=#{toId},
	    	</if>
			<if test="createTime != null">  
	        	CREATE_TIME=#{createTime},
	    	</if>
			<if test="userIp != null">  
	        	USER_IP=#{userIp},
	    	</if>
			<if test="blogId != null">  
	        	BLOG_ID=#{blogId},
	    	</if>
			<if test="fromId != null">  
	        	FROM_ID=#{fromId},
	    	</if>
	    	<if test="commentId != null">  
	        	COMMENT_ID=#{commentId},
	    	</if>
			<if test="messageContent != null">  
	        	MESSAGE_CONTENT=#{messageContent},
	    	</if>
	</set>   
    WHERE id=#{id}
</update>

<delete id="delete">
	delete from comment where id=#{id}
</delete>

<select id="getById" resultMap="CommentBaseMapper">
	SELECT * FROM comment WHERE id=#{id} 
</select>

<select id="countByParm" resultType="integer">
	select count(*) from comment  where 1=1 
			<if test="parm.discoveryId != null">
		     	and DISCOVERY_ID = #{parm.discoveryId}
		   	</if>
		   	<if test="parm.commentId != null">
		     	and COMMENT_ID = #{parm.commentId}
		   	</if>
			<if test="parm.toId != null">
		     	and TO_ID = #{parm.toId}
		   	</if>
			<if test="parm.createTime != null">
		     	and CREATE_TIME = #{parm.createTime}
		   	</if>
			<if test="parm.userIp != null">
		     	and USER_IP = #{parm.userIp}
		   	</if>
			<if test="parm.blogId != null">
		     	and BLOG_ID = #{parm.blogId}
		   	</if>
			<if test="parm.fromId != null">
		     	and FROM_ID = #{parm.fromId}
		   	</if>
			<if test="parm.messageContent != null">
		     	and MESSAGE_CONTENT = #{parm.messageContent}
		   	</if>
</select>

<select id="getBeanListByParm" resultMap="CommentBaseMapper">
	select * from comment where 1=1 
			<if test="parm.discoveryId != null">
		     	and DISCOVERY_ID = #{parm.discoveryId}
		   	</if>
		   	<if test="parm.commentId != null">
		     	and COMMENT_ID = #{parm.commentId}
		   	</if>
			<if test="parm.toId != null">
		     	and TO_ID = #{parm.toId}
		   	</if>
			<if test="parm.createTime != null">
		     	and CREATE_TIME = #{parm.createTime}
		   	</if>
			<if test="parm.userIp != null">
		     	and USER_IP = #{parm.userIp}
		   	</if>
			<if test="parm.blogId != null">
		     	and BLOG_ID = #{parm.blogId}
		   	</if>
			<if test="parm.fromId != null">
		     	and FROM_ID = #{parm.fromId}
		   	</if>
			<if test="parm.messageContent != null">
		     	and MESSAGE_CONTENT = #{parm.messageContent}
		   	</if>
		<if test="parm.orderby != null">
	   		order by ${parm.orderby}
	   	</if>
		<if test="parm.start != null">
			limit #{parm.start},#{parm.limit}
		</if>
</select>

<select id="getMapListByParm_count" parameterType="HashMap" resultType="integer">
	select count(*)
	from `comment` c
	LEFT JOIN discovery d on d.id=c.DISCOVERY_ID
	LEFT JOIN `user` u1 on u1.ID = c.FROM_ID
	LEFT JOIN `user` u2 on u2.ID = c.TO_ID
	where 1=1
	<if test="parm.title != null">
		and d.title=#{parm.title}
	</if>
	<if test="parm.fromId != null">
		and u1.username=#{parm.fromId}
	</if>
	<if test="parm.toId != null">
		and u2.username=#{parm.toId} 
	</if>
</select>
<select id="getMapListByParm" parameterType="HashMap" resultType="HashMap">
	select 
	c.ID as id,
	d.TITLE as title,
	u1.USERNAME as fromName,
	u2.USERNAME as toName,
	c.COMMENT_ID as commentId,
	c.MESSAGE_CONTENT as content,
	DATE_FORMAT(c.CREATE_TIME,'%Y-%m-%d %H:%s:%i') as createTimeStr
	from `comment` c
	LEFT JOIN discovery d on d.id=c.DISCOVERY_ID
	LEFT JOIN `user` u1 on u1.ID = c.FROM_ID
	LEFT JOIN `user` u2 on u2.ID = c.TO_ID
	where 1=1
	<if test="parm.title != null">
		and d.title=#{parm.title}
	</if>
	<if test="parm.fromId != null">
		and u1.username=#{parm.fromId}
	</if>
	<if test="parm.toId != null">
		and u2.username=#{parm.toId} 
	</if>
		<if test="parm.orderby != null">
	   		order by ${parm.orderby}
	   	</if>
		<if test="parm.start != null">
			limit #{parm.start},#{parm.limit}
		</if>
</select>

<select id="getMapListForDrag" parameterType="HashMap" resultType="HashMap">
		select 
		c.ID as id,
		c.COMMENT_ID as commentId,
		c.MESSAGE_CONTENT as messageContent,
		DATE_FORMAT(c.CREATE_TIME,'%Y-%m-%d %H:%m:%i') as createTimeStr,
		uf.ID as fromId,
		uf.USERNAME as fromName,
		uf.AVATAR as fromAvatar,
		ut.ID as toId,
		ut.USERNAME as toName,
		ut.AVATAR as toAvatar
		from `comment` c
		LEFT JOIN `user` uf on uf.ID = c.FROM_ID
		LEFT JOIN `user` ut on ut.ID = c.TO_ID
		where 1=1
			<if test="parm.discoveryId != null">
		     	and c.DISCOVERY_ID = #{parm.discoveryId}
		   	</if>
			<if test="parm.toId != null">
		     	and c.TO_ID = #{parm.toId}
		   	</if>
			<if test="parm.blogId != null">
		     	and c.BLOG_ID = #{parm.blogId}
		   	</if>
			<if test="parm.fromId != null">
		     	and c.FROM_ID = #{parm.fromId}
		   	</if>
		   	<if test="parm.commentId != null">
		     	and c.COMMENT_ID = #{parm.commentId}
		   	</if>
		   	<if test="parm.emptyCommentId=='true'">
		     	and c.COMMENT_ID is null
		   	</if>
		   	<if test="parm.notEmptyCommentId == 'true'">
		     	and c.COMMENT_ID is not null
		   	</if>
			
			<if test="parm.type == 'up'">
		     	and c.id &lt; #{parm.id}
		     	order by c.id asc
		   	</if>
		   	<if test="parm.type == 'down'">
		     	and c.id > #{parm.id}
		     	order by c.id desc
		   	</if>
			<if test="parm.type == null || parm.type == ''">
				order by c.id asc
			</if>   	
		   
		<if test="parm.pageSize != null">
			limit #{parm.pageSize}
		</if>
</select>

<select id="getCommentDetailById" parameterType="HashMap" resultType="HashMap">
		select 
		c.ID as id,
		c.COMMENT_ID as commentId,
		c.MESSAGE_CONTENT as messageContent,
		c.DISCOVERY_ID as discoveryId,
		c.BLOG_ID as blogId,
		DATE_FORMAT(c.CREATE_TIME,'%Y-%m-%d %H:%m:%i') as createTimeStr,
		uf.ID as fromId,
		uf.USERNAME as fromName,
		uf.AVATAR as fromAvatar,
		ut.ID as toId,
		ut.USERNAME as toName,
		ut.AVATAR as toAvatar
		from `comment` c
		LEFT JOIN `user` uf on uf.ID = c.FROM_ID
		LEFT JOIN `user` ut on ut.ID = c.TO_ID
		where c.ID = #{id}
</select>


</mapper>